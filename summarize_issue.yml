name: Summarize GitHub Issue

on:
  issues:
    types: [opened, edited] # 이슈가 열리거나 수정될 때 워크플로우 트리거

jobs:
  summarize:
    runs-on: ubuntu-latest # 워크플로우를 실행할 가상 환경
    permissions:
      issues: write # 이슈에 댓글을 달기 위한 권한
      contents: write # 아티팩트를 업로드하거나 저장소에 커밋하기 위한 권한 (아티팩트만 업로드할 경우 contents: write는 불필요)

    steps:
      - name: Checkout repository # 저장소 코드 가져오기
        uses: actions/checkout@v4

      - name: Install GitHub CLI and gh models extension # gh CLI 및 models 확장 설치
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          gh extension install github/gh-models

      - name: Get issue body # 이슈 본문을 가져와 변수에 저장
        id: get_issue_body
        run: |
          # $GITHUB_EVENT_PATH는 워크플로우를 트리거한 이벤트의 JSON 페이로드입니다.
          ISSUE_BODY=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
          # $GITHUB_OUTPUT에 변수를 저장하여 다음 스텝에서 사용
          echo "issue_body<<EOF" >> $GITHUB_OUTPUT
          echo "$ISSUE_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Summarize issue with GitHub Models # GitHub Models로 이슈 요약
        id: summarize_output
        run: |
          # 이전 스텝에서 가져온 issue_body를 입력으로 사용
          SUMMARY=$(gh models run summarize -f summarize.prompt.yml -i "${{ steps.get_issue_body.outputs.issue_body }}" --json | jq -r '.output')
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub Actions 기본 토큰 (권한 필요)

      # --- 결과 저장 옵션 시작 ---

      - name: Save summary to a file # 요약 결과를 파일로 저장
        run: echo "${{ steps.summarize_output.outputs.summary }}" > issue_summary.md

      - name: Upload summary as artifact # 저장된 파일을 아티팩트로 업로드
        uses: actions/upload-artifact@v4
        with:
          name: issue-summary-${{ github.event.issue.number }} # 아티팩트 이름 (이슈 번호 포함)
          path: issue_summary.md
          retention-days: 7 # 7일 동안 보관

      - name: Add summary as an issue comment # 요약 결과를 이슈 댓글로 추가
        uses: actions/github-script@v6 # GitHub API와 상호작용하기 위한 액션
        with:
          script: |
            const summary = `${{ steps.summarize_output.outputs.summary }}`;
            const issueNumber = context.issue.number;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `## Issue Summary by AI\n\n${summary}\n\n_This summary was generated by GitHub Models._`
            });

      # (선택 사항) 결과 파일을 저장소에 커밋하는 예시
      # - name: Commit summary to repository
      #   run: |
      #     git config user.name github-actions[bot]
      #     git config user.email github-actions[bot]@users.noreply.github.com
      #     git add issue_summary.md
      #     git commit -m "Add summary for issue #${{ github.event.issue.number }}" || echo "No changes to commit"
      #     git push
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # (선택 사항) 외부 스토리지(S3)에 업로드하는 예시 (AWS 자격 증명 설정 필요)
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      # - name: Upload to S3
      #   run: aws s3 cp issue_summary.md s3://your-s3-bucket-name/summaries/issue_summary_${{ github.event.issue.number }}.md
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: us-east-1